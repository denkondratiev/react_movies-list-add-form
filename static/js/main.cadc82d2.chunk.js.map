{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","Shapes.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","PropTypes","shape","string","number","state","error","onChangeInput","target","name","value","setState","prevState","replace","handleSubmit","e","preventDefault","pattern","test","Number","props","addMovie","errorObj","this","onSubmit","type","placeholder","maxLength","onChange","Component","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"kyEAIaA,G,kBAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,QAA/B,OACvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aAaRJ,EAAUS,aAAe,CACvBP,YAAa,ICxCR,IAAMQ,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,yBAAKN,UAAU,UACZM,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,SAgBxCH,EAAWD,aAAe,CACxBE,OAAQ,I,kCCtBGK,GCFgBC,IAAUC,MAAM,CAC3CjB,MAAOgB,IAAUE,OACjBjB,YAAae,IAAUE,OACvBhB,OAAQc,IAAUE,OAClBf,QAASa,IAAUE,OACnBJ,OAAQE,IAAUG,S,MDHpB,4MACEC,MAAQ,CACNpB,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTW,OAAQ,GACRO,MAAO,CACLrB,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTW,OAAQ,KAZd,EAgBEQ,cAAgB,SAACC,GAAY,IACnBC,EAAgBD,EAAhBC,KAAMC,EAAUF,EAAVE,MAEd,EAAKC,UAAS,SAAAC,GAAS,gCACpBH,EAAOC,EAAMG,QAAQ,MAAO,IAAIA,QAAQ,MAAO,MAD3B,iDAGhBD,EAAUN,OAHM,kBAIlBG,GAAO,KAJW,MAnB3B,EA4BEK,aAAe,SAACC,GACdA,EAAEC,iBADkB,MAShB,EAAKX,MALPpB,EAJkB,EAIlBA,MACAC,EALkB,EAKlBA,YACAC,EANkB,EAMlBA,OACAC,EAPkB,EAOlBA,QACAW,EARkB,EAQlBA,OAGIkB,EAAU,qKAEZhC,GAASC,GAAgBC,GAAU8B,EAAQC,KAAK/B,IAC5CC,GAAW6B,EAAQC,KAAK9B,IACzB+B,OAAOpB,KAEZ,EAAKqB,MAAMC,SAAS,EAAKhB,OAGzB,EAAKM,SAAS,CACZ1B,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTW,OAAQ,MAKZ,IAAMuB,EAAW,CACfrC,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTW,OAAQ,IAGLd,IACHqC,EAASrC,OAAQ,GAGdC,IACHoC,EAASpC,aAAc,GAGpBC,GAAW8B,EAAQC,KAAK/B,KAC3BmC,EAASnC,QAAS,GAGfC,GAAY6B,EAAQC,KAAK9B,KAC5BkC,EAASlC,SAAU,GAGhBW,GAAWoB,OAAOpB,KACrBuB,EAASvB,QAAS,GAGpB,EAAKY,SAAS,CACZL,MAAO,CACLrB,MAAOqC,EAASrC,MAChBC,YAAaoC,EAASpC,YACtBC,OAAQmC,EAASnC,OACjBC,QAASkC,EAASlC,QAClBW,OAAQuB,EAASvB,WA5FzB,uDAiGY,IAAD,SAQHwB,KAAKlB,MANPpB,EAFK,EAELA,MACAC,EAHK,EAGLA,YACAC,EAJK,EAILA,OACAC,EALK,EAKLA,QACAW,EANK,EAMLA,OACAO,EAPK,EAOLA,MAGF,OACE,0BAAMjB,UAAU,OAAOmC,SAAU,SAAAT,GAAC,OAAI,EAAKD,aAAaC,KACtD,2BACEU,KAAK,OACLhB,KAAK,QACLpB,UAAS,sBAAiBiB,EAAMrB,OAAS,sBACzCyC,YAAY,kBACZC,UAAU,MACVC,SAAU,SAAAb,GAAC,OAAI,EAAKR,cAAcQ,EAAEP,SACpCE,MAAOzB,IAGPqB,EAAMrB,OACJ,yBAAKI,UAAU,eAAf,0BAKJ,2BACEoC,KAAK,OACLhB,KAAK,cACLpB,UAAS,sBAAiBiB,EAAMpB,aAAN,sBAC1BwC,YAAY,wBACZC,UAAU,MACVC,SAAU,SAAAb,GAAC,OAAI,EAAKR,cAAcQ,EAAEP,SACpCE,MAAOxB,IAGPoB,EAAMpB,aACJ,yBAAKG,UAAU,eAAf,gCAKJ,2BACEoC,KAAK,OACLhB,KAAK,SACLpB,UAAS,sBAAiBiB,EAAMnB,QAAN,sBAC1BuC,YAAY,oBACZC,UAAU,MACVC,SAAU,SAAAb,GAAC,OAAI,EAAKR,cAAcQ,EAAEP,SACpCE,MAAOvB,IAGPmB,EAAMnB,QACJ,yBAAKE,UAAU,eAAf,0BAKJ,2BACEoC,KAAK,OACLhB,KAAK,UACLpB,UAAS,sBAAiBiB,EAAMlB,SAAN,sBAC1BsC,YAAY,2BACZC,UAAU,MACVC,SAAU,SAAAb,GAAC,OAAI,EAAKR,cAAcQ,EAAEP,SACpCE,MAAOtB,IAGPkB,EAAMlB,SACJ,yBAAKC,UAAU,eAAf,0BAKJ,2BACEoC,KAAK,OACLhB,KAAK,SACLpB,UAAS,sBAAiBiB,EAAMP,QAAN,sBAC1B2B,YAAY,kBACZC,UAAU,MACVC,SAAU,SAAAb,GAAC,OAAI,EAAKR,cAAcQ,EAAEP,SACpCE,MAAOX,IAGPO,EAAMP,QACJ,yBAAKV,UAAU,eAAf,4BAKJ,4BACEoC,KAAK,SACLpC,UAAU,gBAFZ,kBA7LR,GAA8BwC,c,QEEjBC,EAAb,4MACEzB,MAAQ,CACNV,OAAQoC,GAFZ,EAKEV,SAAW,SAACxB,GACV,EAAKc,UAAS,SAAAC,GAAS,MAAK,CAC1BjB,OAAO,GAAD,mBACDiB,EAAUjB,QADT,CAEJE,SATR,uDAcY,IACAF,EAAW4B,KAAKlB,MAAhBV,OAER,OACE,yBAAKN,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYM,OAAQA,KAEtB,yBAAKN,UAAU,WACb,kBAAC,EAAD,CAAUgC,SAAUE,KAAKF,iBAvBnC,GAAyBQ,aCDzBG,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.cadc82d2.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport { addMovieShape } from '../../Shapes';\nimport './NewMovie.scss';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    error: {\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    },\n  };\n\n  onChangeInput = (target) => {\n    const { name, value } = target;\n\n    this.setState(prevState => ({\n      [name]: value.replace(/^\\s/, '').replace(/\\s/g, ' '),\n      error: {\n        ...prevState.error,\n        [name]: false,\n      },\n    }));\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n    // eslint-disable-next-line max-len\n    const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n    if (title && description && (imgUrl && pattern.test(imgUrl))\n        && (imdbUrl && pattern.test(imdbUrl))\n        && Number(imdbId)) {\n      // Add new movie\n      this.props.addMovie(this.state);\n\n      // Reset form inputs\n      this.setState({\n        title: '',\n        description: '',\n        imgUrl: '',\n        imdbUrl: '',\n        imdbId: '',\n      });\n    }\n\n    // If errors\n    const errorObj = {\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    };\n\n    if (!title) {\n      errorObj.title = true;\n    }\n\n    if (!description) {\n      errorObj.description = true;\n    }\n\n    if (!imgUrl || !pattern.test(imgUrl)) {\n      errorObj.imgUrl = true;\n    }\n\n    if (!imdbUrl || !pattern.test(imdbUrl)) {\n      errorObj.imdbUrl = true;\n    }\n\n    if (!imdbId || !Number(imdbId)) {\n      errorObj.imdbId = true;\n    }\n\n    this.setState({\n      error: {\n        title: errorObj.title,\n        description: errorObj.description,\n        imgUrl: errorObj.imgUrl,\n        imdbUrl: errorObj.imdbUrl,\n        imdbId: errorObj.imdbId,\n      },\n    });\n  }\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      error,\n    } = this.state;\n\n    return (\n      <form className=\"form\" onSubmit={e => this.handleSubmit(e)}>\n        <input\n          type=\"text\"\n          name=\"title\"\n          className={`form__input ${error.title && 'form__input--error'}`}\n          placeholder=\"Add movie title\"\n          maxLength=\"100\"\n          onChange={e => this.onChangeInput(e.target)}\n          value={title}\n        />\n        {\n          error.title && (\n            <div className=\"form__error\">\n              Please add movie title\n            </div>\n          )\n        }\n        <input\n          type=\"text\"\n          name=\"description\"\n          className={`form__input ${error.description && `form__input--error`}`}\n          placeholder=\"Add movie description\"\n          maxLength=\"100\"\n          onChange={e => this.onChangeInput(e.target)}\n          value={description}\n        />\n        {\n          error.description && (\n            <div className=\"form__error\">\n              Please add movie description\n            </div>\n          )\n        }\n        <input\n          type=\"text\"\n          name=\"imgUrl\"\n          className={`form__input ${error.imgUrl && `form__input--error`}`}\n          placeholder=\"Add url for image\"\n          maxLength=\"100\"\n          onChange={e => this.onChangeInput(e.target)}\n          value={imgUrl}\n        />\n        {\n          error.imgUrl && (\n            <div className=\"form__error\">\n              Please add correct url\n            </div>\n          )\n        }\n        <input\n          type=\"text\"\n          name=\"imdbUrl\"\n          className={`form__input ${error.imdbUrl && `form__input--error`}`}\n          placeholder=\"Add url for link to imdb\"\n          maxLength=\"100\"\n          onChange={e => this.onChangeInput(e.target)}\n          value={imdbUrl}\n        />\n        {\n          error.imdbUrl && (\n            <div className=\"form__error\">\n              Please add correct url\n            </div>\n          )\n        }\n        <input\n          type=\"text\"\n          name=\"imdbId\"\n          className={`form__input ${error.imdbId && `form__input--error`}`}\n          placeholder=\"Add Id for imdb\"\n          maxLength=\"100\"\n          onChange={e => this.onChangeInput(e.target)}\n          value={imdbId}\n        />\n        {\n          error.imdbId && (\n            <div className=\"form__error\">\n              Please add numbers value\n            </div>\n          )\n        }\n        <button\n          type=\"submit\"\n          className=\"form__button\"\n        >\n          Add movie\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = addMovieShape.isRequired;\n","import PropTypes from 'prop-types';\n\nexport const addMovieShape = PropTypes.shape({\n  title: PropTypes.string,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string,\n  imdbUrl: PropTypes.string,\n  imdbId: PropTypes.number,\n});\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(prevState => ({\n      movies: [\n        ...prevState.movies,\n        movie,\n      ],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}